#!/usr/bin/env python

import os
import sys
import json
import random
from glob import glob

from util import PathLike,List,set_picture_spanned,get_monitor_info,set_wallpaper_from
from fit_type import FIT,Wallpaper,make_wallpaper


def set_wallpaper()->None:
    """
    Get current monitors and their sizes and set the wallpaper accordingly
    if dir has no images nothing will happen if it has 1 image it will be repeated
    if it has more images than monitors random ones will be picked
    """
    
    # load config
    config = {}
    cfg_file="./config.json"
    with open(cfg_file, 'r') as file:
        config = json.load(file)
    if not config:
        raise Exception("Expected config Not found")
    wallpapers = []
    for device in config["devices"]:
        wallpapers += [Wallpaper(
            image_dir=device["image_dir"],
            x=device["x"],
            y=device["y"],
            w=device["w"],
            h=device["h"],
            device_name=device["device_name"],
            fit_type= eval(f"FIT.{device['fit_type']}").value
        )]
    
    save_dir = make_wallpaper(wallpapers,config["w"],config["h"],"default")
    set_wallpaper_from(save_dir)
    set_picture_spanned()


def set_config(random_dir=None):
    result = get_monitor_info()
    config = {}
    screen_numbers = [screen['screen_number'] for screen in result['screens']]
    if len(screen_numbers)==1:
        screen_number = screen_numbers[0]
    else:
        print(f"Available screens :\n\t{screen_numbers}\n")
        screen_number = int(input("select your screen number : ").strip())
        if screen_number not in screen_numbers:
            raise Exception("wrong screen number")
    screen = next((s for s in result['screens'] if s["screen_number"]==screen_number),None)
    if screen==None:
        raise Exception("cant find screen number")
    config["screen_number"] = screen_number
    config["w"]=screen["current_width"]
    config["h"]=screen["current_height"]
    config["devices"] = []
    
    random_imgs = []
    
    prev_random_dir = "./blank.jpg"
    prev_random_dir = os.path.abspath(prev_random_dir)  
    if random_dir != None:
        # TODO more formats?
        random_imgs = glob(random_dir+"*.png")   + \
                        glob(random_dir+"*.jpg") + \
                        glob(random_dir+"*.jpeg")
    
    for device in screen["devices"]:
        d = {}
        if device["is_connected"]==False:
            continue
        d["device_name"] = device["device_name"]
        d["w"] = device["resolution_width"]
        d["h"] = device["resolution_height"]
        d["x"] = device["offset_width"]
        d["y"] = device["offset_height"]
        if random_dir != None:
            try:
                d["image_dir"] = str(random.choice(random_imgs))
                random_imgs.remove(d["image_dir"])
                prev_random_dir = d["image_dir"]
            except:
                d["image_dir"] = prev_random_dir
            d["fit_type"]="FILL"
        else:
            str_d = str(d)
            print(f"\n{str_d[1:-1].strip()}")
            d["image_dir"] = input("wallpaper_dir : ")
            d["fit_type"] = input("Fit Type : \n FIT | FILL | CENTER | STRETCH | TILE : (defaults to TILE)").upper()
            if d["fit_type"]=='':
                d["fit_type"]="FILL"
        
        config["devices"] += [d]
    
    with open("./config.json","w") as f:
        json.dump(config,f)


if __name__=="__main__":
    if sys.argv[1] == "set":
        config = set_config()
    if sys.argv[1] == "random":
        config = set_config(random_dir = str(sys.argv[2]))
    set_wallpaper()
